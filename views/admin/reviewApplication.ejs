<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>審核申請 - Outline</title>
</head>
<body>
    <main class="w-full">
        <div id="content" class="flex-grow overflow-auto">
            <div id="application" class="p-4">
                <table class="w-full text-left bg-white shadow-md rounded-lg overflow-hidden">
                    <thead class="bg-gray-100">
                        <tr>
                            <th class="py-3 w-1/12 text-center align-middle">姓名</th>
                            <th class="py-3 w-1/6 text-center align-middle">Email</th>
                            <th class="py-3 w-1/6 text-center align-middle">申請時間</th>
                            <th class="py-3 w-1/12 text-center align-middle">批准</th>
                            <th class="py-3 w-1/12 text-center align-middle">駁回</th>
                        </tr>
                    </thead>
                    <tbody id="application-body" class="divide-y divide-gray-200"></tbody>
                </table>
            </div>
        </div>
    </main>
    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            try {
                const response = await axios.get(`/api/v1/user/application/restaurant/${restaurantId}`, {
                    headers: {
                        "Authorization": `Bearer ${token}`
                    }
                })
                const applications = response.data.data
                const tbody = document.getElementById('application-body')
                tbody.innerHTML = ''
                if (!applications.length) {
                    const noDataTr = document.createElement('tr')
                    noDataTr.innerHTML = `<td class="text-center align-middle py-6" colspan="5">目前沒有申請者</td>`
                    tbody.appendChild(noDataTr)
                } else {
                    applications.forEach((application, index) => {
                        const tr = document.createElement('tr')
                        tr.id = `userRole${application.user_role_id}`
                        tr.classList.add(index % 2 === 0 ? 'bg-white' : 'bg-gray-50')
                        tr.innerHTML = `
                                <td class="text-center align-middle py-6">${application.name}</td>
                                <td class="text-center align-middle py-6">${application.email}</td>
                                <td class="text-center align-middle py-6">${application.created_at}</td>
                            `
                        tbody.appendChild(tr);

                        const approveBtnTd = document.createElement('td');
                        approveBtnTd.classList.add("text-center", "align-middle");
                        const approveBtn = document.createElement('button');
                        approveBtn.textContent = '批准';
                        approveBtn.classList.add("bg-emerald-500", "hover:bg-emerald-700", "text-white", "py-2", "px-4", "rounded", "hover:shadow-lg", "transition", "duration-200", "ease-in-out");
                        approveBtn.onclick = () => sendApproveRequest(application.user_role_id);
                        approveBtnTd.appendChild(approveBtn);
                        tr.appendChild(approveBtnTd);

                        const rejectBtnTd = document.createElement('td');
                        rejectBtnTd.classList.add("text-center", "align-middle");
                        const rejectBtn = document.createElement('button');
                        rejectBtn.textContent = '駁回';
                        rejectBtn.classList.add("bg-rose-500", "hover:bg-rose-700", "text-white", "py-2", "px-4", "rounded", "hover:shadow-lg", "transition", "duration-200", "ease-in-out");
                        rejectBtn.onclick = () => sendRejectRequest(application.user_role_id);
                        rejectBtnTd.appendChild(rejectBtn);
                        tr.appendChild(rejectBtnTd);
                    })
                }
            } catch (err) {
                alert(err.response.data.errors)
            }
        })

        async function sendApproveRequest(userRoleId) {
            try {
                const response = await axios.put(`/api/v1/user/application/restaurant/${restaurantId}/${userRoleId}/approve`, {
                    headers: {
                        "Authorization": `Bearer ${token}`
                    }
                })
                alert('批准申請成功')
                document.querySelector(`#userRole${userRoleId}`).remove()
            } catch (err) {
                alert(err.response.data.errors)
            }
        }

        async function sendRejectRequest(userRoleId) {
            try {
                const response = await axios.put(`/api/v1/user/application/restaurant/${restaurantId}/${userRoleId}/reject`, {
                    headers: {
                        "Authorization": `Bearer ${token}`
                    }
                })
                alert('駁回申請成功')
                document.querySelector(`#userRole${userRoleId}`).remove()
            } catch (err) {
                alert(err.response.data.errors)
            }
        }
    </script>
</body>
</html>